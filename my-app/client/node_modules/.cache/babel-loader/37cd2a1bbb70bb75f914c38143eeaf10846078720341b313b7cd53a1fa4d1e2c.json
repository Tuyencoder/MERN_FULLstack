{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\Project\\\\MERN_FULLstack\\\\my-app\\\\client\\\\src\\\\pages\\\\auth\\\\AccessAccount.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"../../context/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessAccount() {\n  _s();\n  const {\n    token\n  } = useParams(); // Sử dụng destructuring để lấy giá trị token từ useParams\n  console.log(\"==>token\", token);\n  const navigate = useNavigate();\n  const [auth, setAuth] = useAuth();\n  const previousToken = useRef(null);\n  useEffect(() => {\n    if (token && token !== previousToken.current) {\n      previousToken.current = token;\n      requestAccess();\n    }\n  }, [token]);\n  const requestAccess = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(`/access-account`, {\n        resetCode: token\n      }); // Gửi token như một object\n      console.log(data);\n      // Lưu data vào local storage\n      localStorage.setItem(\"auth\", JSON.stringify(data));\n      // Lưu data vào context\n      setAuth(data);\n      toast.success(\"Access account successfully !\");\n      navigate('/');\n    } catch (error) {\n      // Xử lý lỗi khi gửi request\n      console.error(\"Error:\", error);\n      // Hiển thị thông báo lỗi nếu cần\n      toast.error(\"An error occurred while Accesssing.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Please wait....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s(AccessAccount, \"lo9N1VTgiUX9o2u4VwwyGiw6kB0=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = AccessAccount;\nvar _c;\n$RefreshReg$(_c, \"AccessAccount\");","map":{"version":3,"names":["axios","React","useEffect","useRef","useParams","useAuth","useNavigate","toast","jsxDEV","_jsxDEV","AccessAccount","_s","token","console","log","navigate","auth","setAuth","previousToken","current","requestAccess","data","post","resetCode","localStorage","setItem","JSON","stringify","success","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive/Desktop/Project/MERN_FULLstack/my-app/client/src/pages/auth/AccessAccount.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect , useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function AccessAccount() {\r\n  const { token } = useParams(); // Sử dụng destructuring để lấy giá trị token từ useParams\r\n  console.log(\"==>token\", token);\r\n  const navigate = useNavigate();\r\n  const [auth, setAuth] = useAuth();\r\n\r\n  const previousToken = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (token && token !== previousToken.current) {\r\n      previousToken.current = token;\r\n      requestAccess();\r\n    }\r\n  }, [token]);\r\n\r\n  const requestAccess = async () => {\r\n    try {\r\n      const { data } = await axios.post(`/access-account`, {resetCode :token }); // Gửi token như một object\r\n      console.log(data);\r\n      // Lưu data vào local storage\r\n      localStorage.setItem(\"auth\", JSON.stringify(data));\r\n      // Lưu data vào context\r\n      setAuth(data);\r\n      toast.success(\"Access account successfully !\");\r\n        navigate('/');\r\n    } catch (error) {\r\n      // Xử lý lỗi khi gửi request\r\n      console.error(\"Error:\", error);\r\n      // Hiển thị thông báo lỗi nếu cần\r\n      toast.error(\"An error occurred while Accesssing.\");\r\n    }\r\n  };\r\n\r\n  return <div>Please wait....</div>;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAGC,MAAM,QAAQ,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/BS,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,KAAK,CAAC;EAC9B,MAAMG,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEjC,MAAMa,aAAa,GAAGf,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,IAAIA,KAAK,KAAKM,aAAa,CAACC,OAAO,EAAE;MAC5CD,aAAa,CAACC,OAAO,GAAGP,KAAK;MAC7BQ,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAE,iBAAgB,EAAE;QAACC,SAAS,EAAEX;MAAM,CAAC,CAAC,CAAC,CAAC;MAC3EC,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;MACjB;MACAG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;MAClD;MACAJ,OAAO,CAACI,IAAI,CAAC;MACbd,KAAK,CAACqB,OAAO,CAAC,+BAA+B,CAAC;MAC5Cb,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACd;MACAhB,OAAO,CAACgB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B;MACAtB,KAAK,CAACsB,KAAK,CAAC,qCAAqC,CAAC;IACpD;EACF,CAAC;EAED,oBAAOpB,OAAA;IAAAqB,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACnC;AAACvB,EAAA,CAlCuBD,aAAa;EAAA,QACjBN,SAAS,EAEVE,WAAW,EACJD,OAAO;AAAA;AAAA8B,EAAA,GAJTzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}