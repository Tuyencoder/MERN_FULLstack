{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\Project\\\\MERN_FULLstack\\\\my-app\\\\client\\\\src\\\\context\\\\auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext } from \"react\";\nimport { API } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    user: null,\n    token: \"\",\n    refreshToken: \"\"\n  });\n  axios.defaults.baseURL = API;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [auth, setAuth],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lBhZJaMBzpf1ysy5P4GxXCBiH0s=\");\n_c = AuthProvider;\nconst useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n}; // [auth, setAuth]\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useAuth, AuthProvider }; // wrap the app with provider\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","createContext","useContext","API","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","user","token","refreshToken","axios","defaults","baseURL","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive/Desktop/Project/MERN_FULLstack/my-app/client/src/context/auth.js"],"sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\nimport {API} from '../config';\r\n\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState({\r\n    user: null,\r\n    token: \"\",\r\n    refreshToken: \"\",\r\n  });\r\n\r\n  axios.defaults.baseURL = API\r\n  return (\r\n    <AuthContext.Provider value={[auth, setAuth]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => useContext(AuthContext); // [auth, setAuth]\r\n\r\nexport { useAuth, AuthProvider }; // wrap the app with provider"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC3D,SAAQC,GAAG,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9B,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/BY,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFC,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGd,GAAG;EAC5B,oBACEE,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE,CAACT,IAAI,EAAEC,OAAO,CAAE;IAAAH,QAAA,EAC1CA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CAbIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAelB,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACI,WAAW,CAAC;AAAA,EAAC,CAAC;AAAAoB,GAAA,CAAzCD,OAAO;AAEb,SAASA,OAAO,EAAElB,YAAY,GAAG,CAAC;AAAA,IAAAiB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}